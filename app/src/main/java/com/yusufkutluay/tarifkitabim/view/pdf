private fun tarifToPdfAndShare(tarif: Tarif) {
        val pdfDocument = PdfDocument()

        // PDF sayfasını oluştur
        val pageInfo = PdfDocument.PageInfo.Builder(300, 600, 1).create()
        val page = pdfDocument.startPage(pageInfo)
        val canvas = page.canvas

        // Paint nesnesini oluştur
        val paint = Paint().apply {
            textSize = 12f // Yazı boyutunu belirleyin
            color = ContextCompat.getColor(this@TarifView, android.R.color.black) // Yazı rengini belirleyin
        }

        // Textleri çizmek için canvas üzerinde drawText metodunu kullanın
        canvas.drawText("Tarif Adı: ${tarif.baslik}", 10f, 25f, paint)
        canvas.drawText("Malzemeler:", 10f, 50f, paint)
        canvas.drawText(tarif.malzeme, 10f, 75f, paint)
        canvas.drawText("Tarif:", 10f, 100f, paint)
        canvas.drawText(tarif.tarif, 10f, 125f, paint)

        pdfDocument.finishPage(page)

        val file = File(getExternalFilesDir(Environment.DIRECTORY_DOCUMENTS), "Tarif_${tarif.baslik}.pdf")
        try {
            FileOutputStream(file).use { outputStream ->
                pdfDocument.writeTo(outputStream)
                pdfDocument.close()
                // PDF'i paylaşıyoruz
                sharePdf(file)
            }
        } catch (e: Exception) {
            e.printStackTrace()
            Toast.makeText(this, "PDF kaydedilirken hata oluştu: ${e.message}", Toast.LENGTH_LONG).show()
        }
    }

    private fun sharePdf(file: File) {
        val uri = FileProvider.getUriForFile(this, "${packageName}.provider", file)

        val shareIntent = Intent(Intent.ACTION_SEND).apply {
            type = "application/pdf"
            putExtra(Intent.EXTRA_STREAM, uri)
            addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)
        }

        try {
            startActivity(Intent.createChooser(shareIntent, "PDF'i Paylaş"))
        } catch (e: Exception) {
            e.printStackTrace()
            Toast.makeText(this, "PDF paylaşılırken hata oluştu.", Toast.LENGTH_SHORT).show()
        }
    }


    private fun checkPermissions(onPermissionGranted: () -> Unit) {
            if (ContextCompat.checkSelfPermission(this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE)
                != PackageManager.PERMISSION_GRANTED) {

                ActivityCompat.requestPermissions(this,
                    arrayOf(android.Manifest.permission.WRITE_EXTERNAL_STORAGE), PERMISSION_REQUEST_CODE)
            } else {
                onPermissionGranted()
            }
        }

        override fun onRequestPermissionsResult(
            requestCode: Int, permissions: Array<out String>, grantResults: IntArray
        ) {
            super.onRequestPermissionsResult(requestCode, permissions, grantResults)
            if (requestCode == PERMISSION_REQUEST_CODE) {
                if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    // İzin verildi, PDF oluşturma işlemini burada çağırabilirsiniz
                    tarif?.let {
                        tarifToPdfAndShare(it)
                    }
                } else {
                    Toast.makeText(this, "Dosya erişim izni reddedildi", Toast.LENGTH_SHORT).show()
                }
            }
        }